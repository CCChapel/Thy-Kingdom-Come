@charset "UTF-8";
/* http://meyerweb.com/eric/tools/css/reset/ 
   v2.0 | 20110126
   License: none (public domain)
*/
html, body, div, span, applet, object, iframe,
h1, h2, h3, h4, h5, h6, p, blockquote, pre,
a, abbr, acronym, address, big, cite, code,
del, dfn, em, img, ins, kbd, q, s, samp,
small, strike, strong, sub, sup, tt, var,
b, u, i, center,
dl, dt, dd, ol, ul, li,
fieldset, form, label, legend,
table, caption, tbody, tfoot, thead, tr, th, td,
article, aside, canvas, details, embed,
figure, figcaption, footer, header, hgroup,
menu, nav, output, ruby, section, summary,
time, mark, audio, video {
  margin: 0;
  padding: 0;
  border: 0;
  font-size: 100%;
  font: inherit;
  vertical-align: baseline; }

/* HTML5 display-role reset for older browsers */
article, aside, details, figcaption, figure,
footer, header, hgroup, menu, nav, section {
  display: block; }

ol, ul {
  list-style: none; }

blockquote, q {
  quotes: none; }

blockquote:before, blockquote:after,
q:before, q:after {
  content: '';
  content: none; }

table {
  border-collapse: collapse;
  border-spacing: 0; }

/*------------------------------------*\
#BOX-SIZING
\*------------------------------------*/
/**
* Set the global `box-sizing` state to `border-box`.
*
* css-tricks.com/inheriting-box-sizing-probably-slightly-better-best-practice
* paulirish.com/2012/box-sizing-border-box-ftw
*/
html {
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
  box-sizing: border-box; }

*, *:before, *:after {
  -webkit-box-sizing: inherit;
  -moz-box-sizing: inherit;
  box-sizing: inherit; }

/**
 * Typecsset
 *
 * Typecsset is a small, unopinionated library for creating beautifully set type
 * on the web. Typecsset gives perfect vertical rhythm at any configurable font
 * size, as well as many other typographical niceties.
 */
/*------------------------------------*\
    #SHARED
\*------------------------------------*/
/**
 * A lot of elements in Typecsset need to share some declarations (mainly for
 * vertical rhythm), so we `@extend` some silent classes.
 */
h1, h2, h3, h4, h5, h6, ul, ol, dd, p, address, pre, blockquote, table {
  margin: 0;
  padding: 0; }

h1, h2, h3, h4, h5, h6, ul, ol, dd, p, address, pre, blockquote, table {
  margin-bottom: 24px;
  margin-bottom: 1.5rem; }

/*------------------------------------*\
    #BASE
\*------------------------------------*/
/**
 * 1. Set the base elementΓÇÖs `font-size` to the value of your choosing. Set in
 *    ems, assuming a browser default of 16px.
 * 2. Work out the unitless `line-height` for your project based around your
 *    desired `line-height` (defined previously in pixels), and your projectΓÇÖs
 *    base font size.
 */
html {
  font-size: 1em;
  /* [1] */
  line-height: 1.5;
  /* [2] */ }

body {
  margin: 0; }

/*------------------------------------*\
    #HEADINGS
\*------------------------------------*/
h1 {
  font-size: 48px;
  font-size: 3rem;
  line-height: 1; }

h2 {
  font-size: 36px;
  font-size: 2.25rem;
  line-height: 1.33333; }

h3 {
  font-size: 30px;
  font-size: 1.875rem;
  line-height: 1.6; }

h4 {
  font-size: 24px;
  font-size: 1.5rem;
  line-height: 1; }

h5 {
  font-size: 20px;
  font-size: 1.25rem;
  line-height: 1.2; }

h6 {
  font-size: 18px;
  font-size: 1.125rem;
  line-height: 1.33333; }

/*------------------------------------*\
    #LISTS
\*------------------------------------*/
ul, ol, dd {
  margin-left: 48px;
  margin-left: 3rem; }

li > ul,
li > ol {
  margin-bottom: 0; }

/*------------------------------------*\
    #PARAGRAPHS
\*------------------------------------*/
/**
 * Not strictly a paragraph, but probably doesnΓÇÖt need its own section.
 */
/*------------------------------------*\
    #CODE
\*------------------------------------*/
/**
 * 1. Fix an odd quirk whereby, without this, code blocks are rendered at a
 *    font-size smaller than 1em.
 */
code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  /* [1] */ }

/*------------------------------------*\
    #QUOTES
\*------------------------------------*/
/**
 * 1. Hang the opening quote of the blockquote.
 */
blockquote {
  text-indent: -0.41em;
  /* [1] */ }

/**
 * Set up quote marks on quoting elements. This is very English-based, so we are
 * using ΓÇ£, ΓÇ¥, ΓÇÿ, and ΓÇÖ quotes.
 */
blockquote {
  quotes: "ΓÇ£" "ΓÇ¥";
  margin-left: 48px;
  margin-left: 3rem; }
  blockquote p:before {
    content: "ΓÇ£";
    content: open-quote; }
  blockquote p:after {
    content: "";
    content: no-close-quote; }
  blockquote p:last-of-type:after {
    content: "ΓÇ¥";
    content: close-quote; }

q {
  quotes: "ΓÇÿ" "ΓÇÖ" "ΓÇ£" "ΓÇ¥";
  /**
   * If an element opens with an inline quote, letΓÇÖs hang that.
   */ }
  q:before {
    content: "ΓÇÿ";
    content: open-quote; }
  q:after {
    content: "ΓÇÖ";
    content: close-quote; }
  q q:before {
    content: "ΓÇ£";
    content: open-quote; }
  q q:after {
    content: "ΓÇ¥";
    content: close-quote; }
  q:first-child {
    display: inline-block;
    text-indent: -0.22em; }

/*------------------------------------*\
    #TABLES
\*------------------------------------*/
/**
 * Crude table styles; tables are very difficult to keep on the baseline.
 */
table {
  width: 100%;
  border-collapse: collapse;
  border-spacing: 0; }

th,
td {
  padding: 12px; }

/*------------------------------------*\
Taken from CSS Wizardry Grids
csswizardry.com
\*------------------------------------*/
/**
* Define your breakpoints. The first value is the prefix that shall be used for
* your classes (e.g. `.palm--one-half`), the second value is the media query
* that the breakpoint fires at.
*/
/**
* These mixins are for the library to use only, you should not need to modify
* them at all.
*
* Enclose a block of code with a media query as named in `$breakpoints`.
*/
body {
  font-family: "freight-sans-pro", Verdana, Arial, sans-serif;
  font-size: 16px;
  font-size: 1rem;
  line-height: 1.5;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale; }

h1, h2, h3, h4, h5, h6,
.header {
  font-family: "freight-big-pro", "Franklin Gothic Book", serif;
  letter-spacing: 2px; }

.serif {
  font-family: "freight-big-pro", "Franklin Gothic Book", serif;
  letter-spacing: 2px; }

.sans-serif {
  font-family: "freight-sans-pro", Verdana, Arial, sans-serif; }

.text-white {
  color: #FFF; }
.text-light-blue {
  color: #a2ccdd; }
.text-medium-blue {
  color: #69a7c2; }
.text-dark-blue {
  color: #467284; }
.text-black {
  color: #333; }
.text-bigger {
  font-size: 24px;
  font-size: 1.5rem;
  line-height: 1; }

.center {
  text-align: center; }

.cursor-point {
  cursor: pointer; }

.cls-1, .cls-2, .cls-3, .cls-4, .cls-5 {
  fill: none; }

.cls-2, .cls-3, .cls-4, .cls-5 {
  stroke: #000;
  stroke-miterlimit: 10; }

@keyframes test {
  0% {
    transform: translateY(0); }
  50% {
    transform: translateY(10px); }
  100% {
    transform: translateY(0); } }
.cls-3 {
  stroke-width: 2px; }

.cls-4 {
  stroke-width: 0.5px; }

.cls-5 {
  stroke-width: 3px; }

#g {
  animation: test 1s infinite; }

.clock__second-hand, .clock__minute-hand, .clock__hour-hand {
  stroke-width: 8;
  stroke-linecap: round;
  -ms-transform-origin: center center;
  /* IE 9 */
  -webkit-transform-origin: center center;
  /* Chrome, Safari, Opera */
  transform-origin: center center; }

.clock {
  display: block; }
  .clock__face {
    stroke: #333;
    stroke-width: 16;
    fill: transparent; }
  .clock__second-hand {
    stroke: red;
    stroke-width: 1;
    animation: rotate 60s infinite linear; }
  .clock__minute-hand {
    stroke: #333;
    animation: rotate 3600s infinite ease; }
  .clock__hour-hand {
    stroke: #333;
    animation: roatate 86400s infinite ease; }

@keyframes rotate {
  0% {
    transform: rotate(0deg); }
  100% {
    transform: rotate(360deg); } }
.flex {
  display: -webkit-box;
  display: -webkit-flex;
  display: -moz-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-flow: row nowrap;
  -moz-flex-flow: row nowrap;
  -ms-flex-flow: row nowrap;
  flex-flow: row nowrap;
  -webkit-box-pack: justify;
  -ms-flex-pack: justify;
  -webkit-justify-content: space-between;
  -moz-justify-content: space-between;
  justify-content: space-between;
  -webkit-box-align: center;
  -ms-flex-align: center;
  -webkit-align-items: center;
  -moz-align-items: center;
  align-items: center;
  -webkit-align-content: stretch;
  -moz-align-content: stretch;
  -ms-flex-line-pack: stretch;
  align-content: stretch;
  height: 100%;
  width: 100%; }
  .flex .one-whole {
    width: 100%; }
  .flex .two-thirds {
    width: 66%; }
  .flex .one-half {
    width: 50%; }
  .flex .one-third {
    width: 33%; }
  .flex .one-quarter {
    width: 25%; }
  @media only screen and (max-width: 1023px) {
    .flex .portable--one-whole {
      width: 100%; }
    .flex .portable--two-thirds {
      width: 66%; }
    .flex .portable--one-half {
      width: 50%; }
    .flex .portable--one-third {
      width: 33%; }
    .flex .portable--one-quarter {
      width: 25%; } }
  @media only screen and (max-width: 480px) {
    .flex .palm--one-whole {
      width: 100%; }
    .flex .palm--two-thirds {
      width: 66%; }
    .flex .palm--one-half {
      width: 50%; }
    .flex .palm--one-third {
      width: 33%; }
    .flex .palm--one-quarter {
      width: 25%; } }
  .flex.align-content-top {
    -webkit-align-content: flex-start;
    -moz-align-content: flex-start;
    -ms-flex-line-pack: start;
    align-content: flex-start; }
  .flex.justify-content-center {
    -webkit-box-pack: center;
    -ms-flex-pack: center;
    -webkit-justify-content: center;
    -moz-justify-content: center;
    justify-content: center; }
  .flex.align-items-stretch {
    -webkit-box-align: stretch;
    -ms-flex-align: stretch;
    -webkit-align-items: stretch;
    -moz-align-items: stretch;
    align-items: stretch; }
  .flex:not(.vertical) > * {
    margin-right: 20px; }
    .flex:not(.vertical) > *:last-child {
      margin-right: 0; }
  .flex.no-gutter > * {
    margin-right: 0; }
  .flex.wrap {
    -webkit-flex-wrap: wrap;
    -moz-flex-wrap: wrap;
    -ms-flex-wrap: wrap;
    flex-wrap: wrap; }
    .flex.wrap > * {
      margin-right: 0; }
  .flex.vertical {
    -webkit-flex-flow: column nowrap;
    -moz-flex-flow: column nowrap;
    -ms-flex-flow: column nowrap;
    flex-flow: column nowrap; }
    .flex.vertical.center {
      -webkit-box-pack: center;
      -ms-flex-pack: center;
      -webkit-justify-content: center;
      -moz-justify-content: center;
      justify-content: center; }
  @media only screen and (max-width: 1023px) {
    .flex.palm--stack {
      -webkit-box-direction: normal;
      -webkit-box-orient: vertical;
      -webkit-flex-direction: column;
      -moz-flex-direction: column;
      -ms-flex-direction: column;
      flex-direction: column; }
      .flex.palm--stack.reverse {
        -webkit-box-direction: reverse;
        -webkit-box-orient: vertical;
        -webkit-flex-direction: column-reverse;
        -moz-flex-direction: column-reverse;
        -ms-flex-direction: column-reverse;
        flex-direction: column-reverse; }
      .flex.palm--stack > * {
        margin-right: 0; } }

.modal {
  background: rgba(0, 0, 0, 0.8);
  color: #FFF;
  position: fixed;
  z-index: 1000;
  height: 100vh;
  width: 100vw; }

.modal-close {
  cursor: pointer;
  position: absolute;
  top: 20px;
  right: 20px; }

.background-cover {
  background-position: top center;
  background-repeat: no-repeat;
  background-size: cover; }

.static-image {
  position: absolute;
  top: 0;
  z-index: -1; }

.object-cover {
  object-fit: cover;
  object-position: top center;
  height: 100%;
  width: 100%; }

.content-wrapper {
  padding: 4rem;
  width: 100%; }
  @media only screen and (max-width: 480px) {
    .content-wrapper {
      padding: 3rem 10px;
      max-width: 100vw;
      overflow-x: hidden; } }
  .content-wrapper.lock-width {
    max-width: 60rem; }

.add-padding {
  padding: 1rem 20px; }

.add-bottom-margin {
  margin-bottom: 24px;
  margin-bottom: 1.5rem; }

.center-by-margin {
  margin-left: auto !important;
  margin-right: auto !important; }

.fill-screen-height {
  min-height: 100vh; }

.full-height {
  height: 100%; }

.half-height {
  height: 50%; }

.overflow-x-hidden {
  overflow-x: hidden; }

.bg-light-blue {
  background-color: #a2ccdd; }
.bg-medium-blue {
  background-color: #69a7c2; }
.bg-dark-blue {
  background-color: #467284; }
.bg-charcoal {
  background-color: #333333; }
.bg-clouds {
  background-image: url(../images/clouds.jpg); }
.bg-cover {
  background-size: cover; }

.hidden {
  display: none; }

.auto-min-height {
  min-height: auto; }

.fx-bottom-border {
  -webkit-transform: translateZ(0);
  -o-transform: translateZ(0);
  -moz-transform: translateZ(0);
  -ms-transform: translateZ(0);
  transform: translateZ(0);
  -webkit-backface-visibility: hidden;
  -moz-backface-visibility: hidden;
  -ms-backface-visibility: hidden;
  backface-visibility: hidden; }
  .fx-bottom-border:before {
    content: "";
    position: absolute;
    z-index: -1;
    left: 0;
    right: 100%;
    bottom: 0;
    background: currentColor;
    height: 4px;
    -webkit-transition: right 0.3s ease-out;
    -moz-transition: right 0.3s ease-out;
    -o-transition: right 0.3s ease-out;
    -ms-transition: right 0.3s ease-out;
    transition: right 0.3s ease-out; }
  .fx-bottom-border.fx-light-blue:before {
    color: #a2ccdd; }
  .fx-bottom-border.fx-medium-blue:before {
    color: #69a7c2; }
  .fx-bottom-border.fx-dark-blue:before {
    color: #467284; }
  .fx-bottom-border:hover:before, .fx-bottom-border:focus:before, .fx-bottom-border:active:before {
    right: 0; }

/*# sourceMappingURL=styles.css.map */
